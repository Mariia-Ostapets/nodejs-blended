{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Phonebook App",
    "license": {
      "name": "Mariia Ostapets - GitHub",
      "url": "https://github.com/Mariia-Ostapets"
    },
    "description": "This is a documentation for Phonebook App"
  },
  "servers": [
    {
      "url": "https://phonebook-api-uuc3.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Operations with users"
    },
    {
      "name": "Contact",
      "description": "Operations with contacts"
    }
  ],
  "paths": {
    "/users/signup": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "SignUp User",
        "operationId": "SignUp",
        "description": "SignUp User with name, email and password",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Lady Gaga"
                  },
                  "email": {
                    "type": "string",
                    "example": "ladygaga@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "1234567890"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Register as a new User. User data is written to the database with unique _id. The server returns an object with User`s info and token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "user",
                    "token"
                  ],
                  "properties": {
                    "user": {
                      "type": "object",
                      "required": [
                        "name",
                        "email"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Lady Gaga"
                        },
                        "email": {
                          "type": "string",
                          "example": "ladygaga@gmail.com"
                        }
                      }
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3YWNiNDdiZTIzNWEwOGVhZWI0MTBmMCIsImlhdCI6MTczOTM3MTY0M30.7pHf2_Ggpy-FCvUENjXmUumQPynDeIBv29tZFXRjQSY"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The server could not understand the request. Validation error.",
            "content": {
              "application\\json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Name is required. Name should be at least 3 characters. Name should be at most 50 characters. Email is required. Email should be in format example@mail.com. Password is required. Password should be at least 8 characters."
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Name is required. Name should be at least 3 characters. Name should be at most 50 characters. Email is required. Email should be in format example@mail.com. Password is required. Password should be at least 8 characters."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "description": "Conflict Error. The request conflicts with the current state of the server.",
            "content": {
              "application\\json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "Email in use."
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Email in use."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "SignIn User",
        "operationId": "SignIn",
        "description": "SignIn User with email and password.",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "ladygaga@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "1234567890"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The server returns an object with User`s info and token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "user",
                    "token"
                  ],
                  "properties": {
                    "user": {
                      "type": "object",
                      "required": [
                        "name",
                        "email"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Lady Gaga"
                        },
                        "email": {
                          "type": "string",
                          "example": "ladygaga@gmail.com"
                        }
                      }
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3YWNiNDdiZTIzNWEwOGVhZWI0MTBmMCIsImlhdCI6MTczOTM3MTY0M30.7pHf2_Ggpy-FCvUENjXmUumQPynDeIBv29tZFXRjQSY"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The server could not understand the request. Validation error.",
            "content": {
              "application\\json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Email is required. Email should be in format example@mail.com. Password is required. Password should be at least 8 characters."
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Email is required. Email should be in format example@mail.com. Password is required. Password should be at least 8 characters."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error. The request is unauthenticated.",
            "content": {
              "application\\json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "Email or password are wrong."
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Email or password are wrong."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Logout User",
        "operationId": "logout",
        "description": "Logout User from account. Requires authentication. Token is deleted from the database.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Logout from account. No content in the response body."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Current User",
        "operationId": "Current",
        "description": "Get information about the current User.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "The server returns an object with User`s info.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "name",
                    "email"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Lady Gaga"
                    },
                    "email": {
                      "type": "string",
                      "example": "ladygaga@gmail.com"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/contacts": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Get list of contacts",
        "operationId": "GetContacts",
        "description": "Get list of contacts by specific User.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "The server returns an array with list of contacts. Every contact`s info is in the single object.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/contact"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Add contact",
        "operationId": "AddContact",
        "description": "Add new contact to the Phonebook.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "number"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Snow"
                  },
                  "number": {
                    "type": "string",
                    "example": "+380501234567"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New contact successfully added to contact list. The server returns an object with info about new contact.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/contact"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The server could not understand the request. Validation error.",
            "content": {
              "application\\json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Name is required. Name should be at least 3 and at most 50 characters. Number is required. Number should be in format +XXXXXXXXXXXX."
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Name is required. Name should be at least 3 and at most 50 characters. Number is required. Number should be in format +XXXXXXXXXXXX."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/contacts/{id}": {
      "delete": {
        "tags": [
          "Contact"
        ],
        "summary": "Delete contact",
        "operationId": "DeleteContactById",
        "description": "Delete an existing contact.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "67accde4ee8c779551c9f071"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Сontact successfully deleted. The server returns an object with info about deleted contact.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/contact"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "Contact"
        ],
        "summary": "Update contact",
        "operationId": "UpdateContactById",
        "description": "Update an existing contact.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "67accde4ee8c779551c9f071"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "number"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Snow"
                  },
                  "number": {
                    "type": "string",
                    "example": "+380501234567"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Сontact successfully updated. The server returns an object with info about updated contact.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/contact"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The server could not understand the request. Validation error.",
            "content": {
              "application\\json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Name should be at least 3 and at most 50 characters. Number should be in format +XXXXXXXXXXXX."
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Name should be at least 3 and at most 50 characters. Number should be in format +XXXXXXXXXXXX."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "_id": {
            "description": "Backend-generated unique identifier for User.",
            "type": "string",
            "example": "67ab6e8b41351d15d8f5823c"
          },
          "name": {
            "description": "User`s name. Is required. Should be at least 3 and at most 50 characters.",
            "type": "string",
            "example": "Lady Gaga"
          },
          "email": {
            "description": "User`s email. Is required. Should be in format example@mail.com.",
            "type": "string",
            "example": "ladygaga@gmail.com"
          },
          "password": {
            "description": "User`s password. Is required. Should be at least 8 characters.",
            "type": "string",
            "example": "1234567890"
          },
          "token": {
            "description": "User`s access token",
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3YWNiNDdiZTIzNWEwOGVhZWI0MTBmMCIsImlhdCI6MTczOTM3MTY0M30.7pHf2_Ggpy-FCvUENjXmUumQPynDeIBv29tZFXRjQSY"
          }
        }
      },
      "contact": {
        "type": "object",
        "required": [
          "name",
          "number"
        ],
        "properties": {
          "_id": {
            "description": "Backend-generated unique identifier for contact.",
            "type": "string",
            "example": "67ac81571191afe92554ed7d"
          },
          "name": {
            "description": "Contact`s name. Is required. Should be at least 3 and at most 50 characters.",
            "type": "string",
            "example": "John Snow"
          },
          "number": {
            "description": "Contact`s phone number. Is required. Should be in format +XXXXXXXXXXXX.",
            "type": "string",
            "example": "+380501234567"
          },
          "userId": {
            "description": "Backend-generated unique identifier for user.",
            "type": "string",
            "example": "67ab6e8b41351d15d8f5823c"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized error. The request is unauthenticated.",
        "content": {
          "application\\json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Not authorizated."
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not authorizated."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not found error. Requested resource could not be found.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Route not found"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application\\json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Server Error. Something went wrong."
                },
                "data": {
                  "type": "string",
                  "example": "Server Error. Something went wrong."
                }
              }
            }
          }
        }
      }
    }
  }
}